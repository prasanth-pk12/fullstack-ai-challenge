name: CI/CD Pipeline

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/app/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install -r app/requirements.txt
        
    - name: Run backend tests
      working-directory: ./backend
      run: |
        echo "Running backend tests..."
        export PYTHONPATH=app
        python -m pytest tests/ -v --junitxml=tests/output/test-results.xml
        
    - name: Upload backend test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: backend-test-results
        path: backend/tests/output/test-results.xml

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: [backend-tests]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: |
        npm install
        
    - name: Run frontend E2E tests with Cypress
      working-directory: ./frontend
      run: |
        echo "Running frontend E2E tests with Cypress..."
        npm run cypress:run
      env:
        CYPRESS_baseUrl: http://localhost:3000
        CYPRESS_apiUrl: http://localhost:8000

    - name: Build frontend for production
      working-directory: ./frontend
      run: |
        echo "Building frontend for production..."
        npm run build
        
    - name: Upload production build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 30
        
    - name: Upload Cypress videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: frontend/cypress/videos/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [frontend-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python for backend security scan
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
        
    - name: Run backend security scan
      working-directory: ./backend
      run: |
        python -m pip install safety bandit
        echo "Running safety check for Python dependencies..."
        safety check -r app/requirements.txt || echo "Safety check completed with warnings"
        echo "Running bandit security linting..."
        bandit -r app/ -f json -o bandit-report.json || echo "Bandit scan completed"
        
    - name: Set up Node.js for frontend security scan
      uses: actions/setup-node@v4
      with:
        node-version: 20
        
    - name: Run frontend security audit
      working-directory: ./frontend
      run: |
        echo "Running npm audit..."
        npm audit --audit-level=high || echo "NPM audit completed with warnings"
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: |
          backend/bandit-report.json
          
  deploy-check:
    name: Deployment Check
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, security-scan]
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: frontend-build
        path: ./frontend-build/
        
    - name: Verify build artifacts
      run: |
        echo "Verifying build artifacts..."
        ls -la frontend-build/
        echo "Build verification complete - ready for deployment"
        
    - name: Deployment readiness check
      run: |
        echo "âœ… All tests passed"
        echo "âœ… Security scans completed"
        echo "âœ… Frontend build successful"
        echo "ðŸš€ Ready for deployment to production"
        echo "ðŸ“Š Deployment by: prasanth-pk12"
